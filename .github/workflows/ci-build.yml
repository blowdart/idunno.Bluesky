name: CI Build

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
    paths-ignore:
      - 'docs/**'
  pull_request:
    branches:
      - 'main'

permissions:
  contents: read
  issues: read
  pull-requests: write
  checks: write

env:
  DOTNET_NOLOGO: true
  DOTNET_GENERATE_ASPNET_CERTIFICATE: false
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout repository'
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # avoid shallow clone so nbgv can do its work.
 
    - name: 'Setup .NET SDK'
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
        dotnet-quality: 'ga'

    - name: 'Restore external dependencies'
      run: dotnet restore

    - name: 'Build repository'
      run: dotnet build --configuration Debug --no-restore

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-packages
        path: |
          src/**/idunno.*.nupkg
          src/**/idunno.*.dll
          src/**/idunno.*.deps.json
          src/**/idunno.*.xml
        retention-days: 5

  test:
    name: Test
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: 'Run Tests'
      run: dotnet test --collect:"XPlat Code Coverage" --logger junit

    - name: 'Create test summary'
      uses: test-summary/action@v2.4
      with:
        paths: test/**/TestResults.xml
        show: "fail, skip"
      if: always()

    - name: 'Generate Coverage Reports'
      uses: danielpalme/ReportGenerator-GitHub-Action@5.4.1
      with:
        reports: "test/**/coverage.cobertura.xml"
        targetdir: "${{ github.workspace }}"
        reporttypes: "Cobertura" 
        verbosity: "Info" 
        title: "Code Coverage" 
        tag: "${{ github.run_number }}_${{ github.run_id }}"
        toolpath: "reportgeneratortool"
        license: ${{ secrets.REPORT_GENERATOR_LICENSE }}

    - name: Upload Code Coverage Results
      uses: actions/upload-artifact@v4
      with:
        name: coverage
        path: ${{ github.workspace }}/Cobertura.xml
        retention-days: 5

    - name: Publish Code Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: "Cobertura.xml"
        badge: true
        fail_below_min: false # just informative for now
        format: markdown
        hide_branch_rate: false
        hide_complexity: false
        indicators: true
        output: both
        thresholds: "10 30"

    - name: Add Code Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        path: code-coverage-results.md

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2.18.0
      if: always()
      with:
        files: "test/**/TestResults.xml"

    - name: Upload Test Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: "test/**/TestResults.xml"
        retention-days: 5
